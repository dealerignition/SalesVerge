#timeline.accordion
  - @timeline_stream.each do |activity|
    .accordion-group.activity{ :class => activity.class.to_s.downcase << "accordion" }
      .accordion-heading
        - id = "#{activity.class}#{activity.id}"
        = link_to "#collapse#{id}", { :class => "accordion-toggle", "data-toggle" => "collapse", "data-parent" => "#timeline" } do
          = to_sentence(activity)
      %div{ :class => "accordion-body collapse", :id => "collapse#{id}" }
        .accordion-inner
          .control-group
            %p
              %i.help-block==#{activity.updated_at.to_formatted_s(:long_ordinal)}
            %p
              = you_or_they(activity.user_id)
              did this
            - unless @customer
              - customer = activity.instance_of?(Customer) ? activity : activity.customer
              %p
                = link_to customer_path(customer), :class => "btn", :title => "View this customer" do
                  %i.icon-user
                  = customer.full_name

            - if activity.instance_of?(Quote)
              - if activity.charges.length.nonzero?
                %table{ :class => "table table-striped" }
                  - activity.charges.each do |charge|
                    %tr
                      %td
                        = charge.description
                      %td
                        %span.badge==#{"%g" % charge.quantity}&times;
                        = number_to_currency(charge.price)
                  %tr
                    %td
                      %strong.pull-right
                        Total
                    %td
                      %strong
                        %span.badge.badge-success= number_to_currency(activity.total)
            - elsif activity.instance_of? Note
              %blockquote= activity.content
            - elsif activity.instance_of? SampleCheckout
              - if activity.checkin_time?
                %p==#{activity.sample.name} has now been returned. It was checked-out for <strong>#{distance_of_time_in_words(activity.created_at, activity.checkin_time)}</strong>.
            .btn-group
              - if activity.instance_of?(Note) && can?(:destroy, activity)
                = link_to customer_note_path(activity.customer, activity.id), :class => "btn btn-danger", :confirm => "Are you sure you want to delete this note?", :method => :delete do
                  %i.icon-remove-circle.icon-white
                  Delete
              - elsif activity.instance_of? SampleCheckout
                - if activity.checkin_time.blank?
                  = link_to sample_checkout_check_in_path(activity), :class => "btn btn-primary", :confirm => "Are you sure #{activity.sample.name} has been returned to your store?" do
                    Check-in
            - if activity.instance_of?(Quote) && (activity.status != "won" || activity.status != "lost")
              %p
                .btn-group
                  = link_to quote_path(activity), :class => "btn", :title => "View this quote" do
                    - if can? :update, activity
                      %i.icon-pencil
                      Modify
                    - else
                      %i.icon-eye-open
                      View
                    Quote
                  = link_to "Email", quote_deliver_customer_mailer_path(activity), { :confirm => "Are you sure you want to email this quote to #{activity.customer.full_name} (#{activity.customer.email})?", :class => "btn btn-primary", :title => "Email this quote to the customer" }
                  /= link_to "Won", quote_won_path(activity), :confirm => "Are you sure you want to mark this quote as 'Won'?", :class => "btn"
                  /= link_to "Lost", quote_lost_path(activity), :confirm => "Are you sure you want to mark this quote as 'Lost'?", :class => "btn"

            - if @customer
              - customer = @customer
            - if activity.instance_of?(Quote)
              - @email_stream.where("customer_id = '#{customer.id}' AND notification_type = 'quote' AND notification_type_id = '#{activity.id}' ").each do |email|
                %p
                  %span.story_notation
                    %i
                      = time_ago_in_words(email.created_at)
                      ago
                    ==- quote was emailed to #{customer.email}

            - if activity.instance_of?(SampleCheckout)
              - @email_stream.where("customer_id = ? AND notification_type_id = ? AND (notification_type = ? OR notification_type = ?)", customer.id, activity.id, "sample_checkout", "long_checkout").each do |email|
                %p
                  %span.story_notation
                    %i
                      = time_ago_in_words(email.created_at)
                      ago
                    - if email.notification_type = "sample_checkout"
                      ==- Sample notification was emailed to #{customer.email}
                    - elsif email.notification_type = "long_checkout"
                      ==- Long checkout notification was emailed to #{customer.email}
