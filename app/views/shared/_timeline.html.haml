.accordion{ :id => "accordion" }
  - @timeline_stream.each do |story|
    .accordion-group.story{ :class => story.class.to_s.downcase }
      .accordion-heading
        - id = "#{story.class}#{story.id}"
        = link_to "#collapse#{id}", { :class => "accordion-toggle", "data-toggle" => "collapse", "data-parent" => "#accordion" } do
          %strong
            =time_ago_in_words(story.updated_at).capitalize
            ago
          = to_sentence(story)
      %div{ :class => "accordion-body collapse", :id => "collapse#{id}" }
        .accordion-inner
          .control-group
            %p
              %i.help-block==#{story.updated_at.to_formatted_s(:long_ordinal)}
            - if story.instance_of?(Estimate) and story.charges.count.nonzero?
              %table{ :class => "table table-striped" }
                - story.charges.each do |charge|
                  %tr
                    %td
                      ==#{"%g" % charge.quantity} &times;
                      = charge.description
                    %td= number_to_currency(charge.total)
            - elsif story.instance_of? Note
              %p= story.content

            .btn-group
              - unless @customer
                - customer = story.instance_of?(Customer) ? story : story.customer
                = link_to customer_path(customer), :class => "btn btn-large" do
                  = customer.full_name
                  %i.icon-arrow-right

              - if story.instance_of? Note
                = link_to customer_note_path(story.customer, story.id), :class => "btn btn-large", :confirm => "Are you sure you want to delete this note?", :method => :delete do
                  %i.icon-remove-circle
                  Delete
              - elsif story.instance_of? Estimate
                = link_to estimate_path(story), :class => "btn btn-large" do
                  Estimate
                  %i.icon-arrow-right
